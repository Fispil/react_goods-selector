{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","selectedGood","clearElement","setState","isSelected","item","removeSelectedElement","this","className","type","onClick","map","classNames","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oQAMaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,aAAc,OAFlB,EAKEC,aAAe,WACb,EAAKC,SAAS,CAAEF,aAAc,MANlC,EASEG,WAAa,SAACC,GAAD,OACX,EAAKL,MAAMC,eAAiBI,GAVhC,EAaEC,sBAAwB,SAACD,GACvB,EAAKF,SAAS,CAAEF,aAAcI,IAC1B,EAAKD,WAAWC,IAClB,EAAKH,gBAhBX,4CAoBE,WAAU,IAAD,OACCD,EAAiBM,KAAKP,MAAtBC,aAER,OACE,uBAAMO,UAAU,oBAAhB,UACGP,EACC,qBAAIO,UAAU,sCAAd,oBACMP,EADN,gBAGE,wBACE,UAAQ,cACRQ,KAAK,SACLD,UAAU,cACV,aAAW,cACXE,QAASH,KAAKL,kBAIf,oBAAIM,UAAU,QAAd,+BAEL,uBAAOA,UAAU,QAAjB,SACE,gCACGV,EAAMa,KAAI,SAAAN,GAAI,OACb,qBACE,UAAQ,OAERG,UACEI,IACE,GACA,CAAE,+BAAgC,EAAKR,WAAWC,KANxD,UAUE,6BACE,wBACE,UACE,EAAKD,WAAWC,GACX,eACA,YAEPI,KAAK,SACLD,UACEI,IACE,SACA,CAAE,UAAW,EAAKR,WAAWC,KAGjCK,QAAS,kBAAM,EAAKJ,sBAAsBD,IAb5C,SAeG,EAAKD,WAAWC,GACZ,IACA,QAIT,oBAAI,UAAQ,YAAYG,UAAU,eAAlC,SACGH,MA/BEA,iBA7CrB,GAAyBQ,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cbea28ee.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGood: string,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGood: 'Jam',\n  };\n\n  clearElement = () => {\n    this.setState({ selectedGood: '' });\n  };\n\n  isSelected = (item: string) => (\n    this.state.selectedGood === item\n  );\n\n  removeSelectedElement = (item: string) => {\n    this.setState({ selectedGood: item });\n    if (this.isSelected(item)) {\n      this.clearElement();\n    }\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"section container\">\n        {selectedGood ? (\n          <h1 className=\"title is-flex is-align-items-center\">\n            {`${selectedGood} is selected`}\n\n            <button\n              data-cy=\"ClearButton\"\n              type=\"button\"\n              className=\"delete ml-3\"\n              aria-label=\"ClearButton\"\n              onClick={this.clearElement}\n            />\n          </h1>\n        )\n          : (<h1 className=\"title\">No goods selected</h1>)}\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map(item => (\n              <tr\n                data-cy=\"Good\"\n                key={item}\n                className={\n                  classNames(\n                    '',\n                    { 'has-background-success-light': this.isSelected(item) },\n                  )\n                }\n              >\n                <td>\n                  <button\n                    data-cy={\n                      this.isSelected(item)\n                        ? ('RemoveButton')\n                        : ('AddButton')\n                    }\n                    type=\"button\"\n                    className={\n                      classNames(\n                        'button',\n                        { 'is-info': this.isSelected(item) },\n                      )\n                    }\n                    onClick={() => this.removeSelectedElement(item)}\n                  >\n                    {this.isSelected(item)\n                      ? ('-')\n                      : ('+')}\n                  </button>\n                </td>\n\n                <td data-cy=\"GoodTitle\" className=\"is-vcentered\">\n                  {item}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}